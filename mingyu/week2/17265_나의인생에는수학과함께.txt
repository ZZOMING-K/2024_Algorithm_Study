문제 링크 : boj.kr/17265

문제 요약 : 2차원 배열 형태로 숫자와 연산기호가 차례로 저장된 지도를 입력받고, 
(0,0)에서 (N,N)까지 존재하는 모든 경로에 대한 수식 값 중 최댓값과 최솟값을 출력한다.
(N,N)까지 최소 거리로 이동해야하므로 오른쪽과 아래쪽으로만 이동할 수 있다.

접근 방법 :
(0, 0)에서 (N, N)까지 존재하는 모든 경로를 구하기 위해 BFS를 사용하였다.
우선 (0, 0)과 지도의 (0, 0)에 해당하는 수(board[0][0])를 큐에 넣는다.
큐에서 원소를 하나씩 pop하며 (N, N)까지 BFS하며 존재 가능한 모든 경로에 대한 수식을 저장한다.
string형식으로 저장된 수식을 숫자와 연산자로 분리하고, 앞에서부터 계산하여 최솟값과 최댓값을 구한다.

(0, 0)에서 (N, N)까지의 모든 표현식을 구한 방법 :
우선 처음에 (0, 0)을 좌표큐에, 입력받은 지도 (0,0)에 해당하는 숫자를 표현식큐에 넣는다.
1. 좌표큐에서 위치를 꺼낸다. 큐는 먼저 입력한 원소가 먼저 나오는 특성을 가지고 있으므로, 큐에 존재하는 값 중 가장 먼저 추가된 값이 pop될 것이다.
2. 표현식큐에서 표현식을 꺼낸다. 마찬가지로 가장 먼저 추가된 값이 pop될 것이다.
3. 1단계 결과로 꺼내진 위치에서 오른쪽/아래쪽 중 이동할 수 있는 곳이 있는지 확인한다.
4. 이동할 수 있는 좌표가 있다면 해당 값을 좌표큐에 넣고, 2단계 결과로 꺼내진 표현식에 3단계 결과로 구한 위치값에 해당하는 값(숫자 or 기호)를 추가하여 표현식 큐에 넣는다.

1단계 결과가 N,N이 될때까지 반복한다.